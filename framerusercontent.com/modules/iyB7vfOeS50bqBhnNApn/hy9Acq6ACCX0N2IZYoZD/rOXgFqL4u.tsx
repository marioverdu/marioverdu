// Generated by Framer (224f28e)

import { addFonts, cx, CycleVariantState, Image, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion } from "framer-motion";
import * as React from "react";

const cycleOrder = ["Un10aQgjU"];

const variantClassNames = {Un10aQgjU: "framer-v-2mzn2z"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const humanReadableVariantMap = {};

const transitions = {default: {damping: 60, delay: 0, duration: 0.3, ease: [0.44, 0, 0.56, 1], mass: 1, stiffness: 500, type: "spring"}};

export interface Props extends React.HTMLAttributes<HTMLDivElement> { layoutId?: string | null; width?: number; height?: number; layoutDependency?: string | number; variant?: keyof typeof humanReadableVariantMap; }

const Component = React.forwardRef<HTMLDivElement, Props>(function({ id, style, className, width, height, layoutId, variant: outerVariant = "Un10aQgjU", ...restProps }, ref) {

const outerVariantId = humanReadableVariantMap[outerVariant];

const variant = outerVariantId || outerVariant;

const {baseVariant, classNames, gestureVariant, setGestureState, setVariant, transition, variants} = useVariantState({cycleOrder, defaultVariant: "Un10aQgjU", transitions, variant, variantClassNames})
const layoutDependency = variants.join("-") + restProps.layoutDependency;

const defaultLayoutId = React.useId()

return (<LayoutGroup id={layoutId ?? defaultLayoutId}>
<motion.div initial={variant} animate={variants} onHoverStart={() => setGestureState({isHovered: true})} onHoverEnd={() => setGestureState({isHovered: false})} onTapStart={() => setGestureState({isPressed: true})} onTap={() => setGestureState({isPressed: false})} onTapCancel={() => setGestureState({isPressed: false})} className={cx("framer-e05pe", classNames)} style={{display: "contents"}}>
<motion.div {...restProps} className={cx("framer-2mzn2z", className)} data-framer-name={"Variant 1"} layoutDependency={layoutDependency} layoutId={"Un10aQgjU"} ref={ref} style={{...style}} transition={transition}><Image background={{alt: "", fit: "fill", src: new URL("assets/Ojow6vJOwpjpS2wyM67ddl52BQ.png", import.meta.url).href}} className={"framer-tmbnpb"} data-framer-name={"image 198"} layoutDependency={layoutDependency} layoutId={"I1059:16545;960:16136"} transition={transition}/></motion.div>
</motion.div>
</LayoutGroup>)

});

const css = [".framer-e05pe [data-border=\"true\"]::after { content: \"\"; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }", "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-e05pe .framer-1aspo80 { display: block; }", ".framer-e05pe .framer-2mzn2z { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: 22px; justify-content: center; overflow: hidden; padding: 0px 0px 0px 0px; position: relative; width: 22px; }", ".framer-e05pe .framer-tmbnpb { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 18px); position: relative; width: 18px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-e05pe .framer-2mzn2z { gap: 0px; } .framer-e05pe .framer-2mzn2z > * { margin: 0px; margin-left: calc(0px / 2); margin-right: calc(0px / 2); } .framer-e05pe .framer-2mzn2z > :first-child { margin-left: 0px; } .framer-e05pe .framer-2mzn2z > :last-child { margin-right: 0px; } }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 22
 * @framerIntrinsicWidth 22
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]}}}
 */
const FramerrOXgFqL4u: React.ComponentType<Props> = withCSS(Component, css, "framer-e05pe") as typeof Component;
export default FramerrOXgFqL4u;

FramerrOXgFqL4u.displayName = "asset/icon/leverade";

FramerrOXgFqL4u.defaultProps = {height: 22, width: 22};

addFonts(FramerrOXgFqL4u, [])